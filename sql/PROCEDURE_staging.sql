DELIMITER $$
CREATE PROCEDURE CHECK_DATE_DIM_IS_EXISTED(
) 
BEGIN
	SELECT * FROM datedim LIMIT 1;
END
$$

DELIMITER $$
CREATE PROCEDURE CHECK_TIME_DIM_IS_EXISTED(
) 
BEGIN
	SELECT * FROM timedim LIMIT 1;
END
$$

-- drop PROCEDURE TRANSFORM_WEATHER_FACT
delimiter $$
CREATE PROCEDURE TRANSFORM_WEATHER_FACT(
	IN SK INT,
	IN province_name nvarchar(75),
	IN date_load date,
	IN time_load time,
	IN currentTemp int,
	IN overview nvarchar(100),
	IN lowestTemp int,
	IN maximumTemp int,
	IN humidity float,
	IN vision float,
	IN wind float, 
	IN stopPoint int, 
	IN uvIndex float,
	IN airQuality nvarchar(50),
	IN timeLoad datetime
	)
BEGIN
-- 	select @timeLoad := time from timedim WHERE timedim.id = time_id;
	select @province_id:= provincedim.id from provincedim WHERE provincedim.name = province_name;
	select @date_id:= datedim.id from datedim WHERE datedim.date = date_load;
	select @time_id:= timedim.id from timedim WHERE timedim.time = time_load;

	REPLACE INTO weatherfact VALUES (SK,@province_id,@date_id,@time_id,currentTemp,overview,lowestTemp,maximumTemp,
	humidity,vision,wind,stopPoint,uvIndex,airQuality,timeLoad,DEFAULT);
END
$$

-- select id from timedim WHERE timedim.time = '00:00'
-- 
-- select @province_id:= provincedim.id from provincedim WHERE provincedim.name = 'Lạng Sơn'
-- SELECT raw_weather_data_thoitietvn.*,raw_weather_data_thoitieteduvn.* from raw_weather_data_thoitietvn,raw_weather_data_thoitieteduvn
-- drop PROCEDURE LOAD_RAW_WEATHER_DATA_INTO_STAGING
DELIMITER $$
CREATE PROCEDURE LOAD_RAW_WEATHER_DATA_INTO_STAGING(
IN ID_PARAM INT,
IN PROVINCE_NAME_PARAM NVARCHAR(50),
IN DATE_LOAD_PARAM DATE,
IN TIME_LOAD_PARAM TIME,
IN CURRENT_TEMP_PARAM INT,
IN OVERVIEW_PARAM NVARCHAR(100),
IN LOWEST_TEMP_PARAM INT,
IN MAXIMUM_TEMP_PARAM INT,
IN HUMIDITY_PARAM FLOAT,
IN VISION_PARAM FLOAT,
IN WIND_PARAM FLOAT,
IN STOP_POINT_PARAM INT,
IN UV_INDEX_PARAM FLOAT,
IN AIR_QUALITY_PARAM NVARCHAR(50)
)
BEGIN
		REPLACE INTO raw_weather_data 
		VALUES (
		ID_PARAM,
		PROVINCE_NAME_PARAM, 
		DATE_LOAD_PARAM,
		TIME_LOAD_PARAM,
		CURRENT_TEMP_PARAM, 
		OVERVIEW_PARAM, 
		LOWEST_TEMP_PARAM,
		MAXIMUM_TEMP_PARAM,
		HUMIDITY_PARAM,
		VISION_PARAM,
		WIND_PARAM,
		STOP_POINT_PARAM,
		UV_INDEX_PARAM,
		AIR_QUALITY_PARAM);
END
$$
DELIMITER $$
CREATE PROCEDURE LOAD_DATE_DIM(
IN ID_PARAM INT,
IN DATE_PARAM TEXT,
IN YEAR_PARAM INT,
IN MONTH_PARAM INT,
IN DAY_PARAM INT,
IN DAY_OF_WEEK_PARAM TEXT 
)
BEGIN
	INSERT INTO datedim VALUES (ID_PARAM, DATE_PARAM, YEAR_PARAM, MONTH_PARAM, DAY_PARAM, DAY_OF_WEEK_PARAM);
END
$$


DELIMITER $$
CREATE PROCEDURE LOAD_TIME_DIM(
IN ID_PARAM INT,
IN TIME_PARAM time
)
BEGIN
	INSERT INTO timedim VALUES (ID_PARAM, TIME_PARAM);
END
$$

DROP PROCEDURE LOAD_TIME_DIM
SELECT CURRENT_TIME
-- DROP PROCEDURE LOAD_DATE_DIM


-- DROP PROCEDURE LOAD_PROVINCE_DIM
DELIMITER $$
CREATE PROCEDURE LOAD_PROVINCE_DIM (
IN ID_PARAM INT,
IN NAME_PARAM NVARCHAR(100)
)
BEGIN
REPLACE INTO provincedim VALUES (ID_PARAM, NAME_PARAM);
END$$

DELIMITER $$

CREATE PROCEDURE CHECK_DIM_DATE_VALUE (
IN SK_DATE int,
IN FULL_DATE varchar(50),
IN `DAY` int,
IN `MONTH` int,
IN DAY_OF_WEEK varchar(50),
IN CALENDAR_MONTH varchar(50),
IN CALENDADR_YEAR int,
IN CALENDAR_YEAR_MONTH varchar(50),
IN DATE_OF_MONTH int,
IN DAY_OF_YEAR int,
IN WEEK_OF_YEAR_SUNDAY int,
IN YEAR_WEEK_SUNDAY varchar(50),
IN WEEK_SUNDAY_START int,
IN YEAR_WEEK_MONDAY varchar(50),
IN QUATER_OF_YEAR varchar(50),
IN YEAR_QUATER varchar(50),
IN QUATER varchar(50),
IN HOLIDAY varchar(50),
IN DAY_TYPE varchar(50)
)
BEGIN 
		IF (SK_DATE IS NULL OR FULL_DATE IS NULL OR `DAY` IS NULL OR `MONTH` IS NULL 
		OR DAY_OF_WEEK IS NULL OR CALENDAR_MONTH IS NULL OR CALENDADR_YEAR IS NULL
		OR CALENDAR_YEAR_MONTH IS NULL OR DATE_OF_MONTH IS NULL
		OR DAY_OF_YEAR IS NULL OR WEEK_OF_YEAR_SUNDAY IS NULL
		OR YEAR_WEEK_SUNDAY IS NULL OR WEEK_SUNDAY_START IS NULL OR YEAR_WEEK_MONDAY IS NULL
		OR QUATER_OF_YEAR IS NULL OR YEAR_QUATER IS NULL OR QUATER IS NULL
		OR HOLIDAY IS NULL OR DAY_TYPE IS NULL)
		THEN
				 SELECT 'SOMTHING WRONG!';
		ELSE
			INSERT INTO dim_date VALUES (SK_DATE, FULL_DATE,`DAY`,`MONTH`, DAY_OF_WEEK, CALENDAR_MONTH, CALENDADR_YEAR,
			CALENDAR_YEAR_MONTH, DATE_OF_MONTH, DAY_OF_YEAR, WEEK_OF_YEAR_SUNDAY, YEAR_WEEK_SUNDAY, WEEK_SUNDAY_START,
			YEAR_WEEK_MONDAY, QUATER_OF_YEAR, YEAR_QUATER, QUATER, HOLIDAY, DAY_TYPE);
		END IF;
END$$

DELIMITER;

CALL CHECK_DIM_DATE_VALUE (1,	'1/1/2005',	1,	1,	'Saturday',	'January',	2005,	'2005-Jan',	1,	1,	52,	'12/26/2004',	53,	'2004-W53',	'12/27/2004',	'2005-Q01',	1,	'Non-Holiday',	'Weekend');

-- DROP PROCEDURE CHECK_DIM_DATE_VALUE
